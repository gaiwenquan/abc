<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
          http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
          http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
          http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
          http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
          http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">

	<context:property-placeholder location="classpath:resources.properties" />

	<!-- 扫描注解Bean -->
	<context:component-scan base-package="com.ehking.wallet.**">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Service" />
	</context:component-scan>
	<!-- 开启AOP监听 只对当前配置文件有效 -->
	<aop:aspectj-autoproxy expose-proxy="true"
		proxy-target-class="true" />

	<!-- 数据源 -->
	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName">
			<value>java:comp/env/jdbc/WALLETDS</value>
		</property>
	</bean>

	<bean id="dataSourceProxy"
		class="org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy">
		<property name="targetDataSource" ref="dataSource" />
	</bean>

	<!-- jpa Entity Factory 配置 -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSourceProxy" />
		<property name="packagesToScan" value="com.ehking.wallet.**.entity" />

		<property name="persistenceUnitName" value="${jpa.persistenceUnitName}" />
		<property name="persistenceProvider">
			<bean class="org.hibernate.ejb.HibernatePersistence" />
		</property>
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="generateDdl" value="${jpa.generateDdl}" />
				<property name="database" value="${jpa.database}" />
				<property name="databasePlatform" value="${jpa.databasePlatform}" />
				<property name="showSql" value="${jpa.showSql}" />
			</bean>
		</property>
		<property name="jpaDialect">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
		</property>
		<property name="jpaPropertyMap">
			<map>
				<entry key="javax.persistence.validation.mode" value="NONE" />

				<!-- 只扫描class文件，不扫描hbm，默认两个都搜索 -->
				<entry key="hibernate.archive.autodetection" value="class" />
				<!-- 不检查@NamedQuery -->
				<entry key="hibernate.query.startup_check" value="false" />

				<entry key="hibernate.query.substitutions" value="${hibernate.query.substitutions}" />
				<entry key="hibernate.default_batch_fetch_size" value="${hibernate.default_batch_fetch_size}" />
				<entry key="hibernate.max_fetch_depth" value="${hibernate.max_fetch_depth}" />
				<entry key="hibernate.generate_statistics" value="false" />
				<entry key="hibernate.bytecode.use_reflection_optimizer"
					value="${hibernate.bytecode.use_reflection_optimizer}" />
				<entry key="hibernate.cache.use_second_level_cache" value="${hibernate.cache.use_second_level_cache}" />
				<entry key="hibernate.cache.use_query_cache" value="${hibernate.cache.use_query_cache}" />
				<entry key="hibernate.cache.region.factory_class" value="${hibernate.cache.region.factory_class}" />
				<entry key="net.sf.ehcache.configurationResourceName" value="${net.sf.ehcache.configurationResourceName}" />
				<entry key="hibernate.cache.use_structured_entries" value="${hibernate.cache.use_structured_entries}" />
				<entry key="hibernate.format_sql" value="true" />
				<entry key="hibernate.ejb.naming_strategy" value="org.hibernate.cfg.ImprovedNamingStrategy" />
				<entry key="hibernate.hbm2ddl.auto" value="none" />
			</map>
		</property>
	</bean>

	<!-- spring data jpa repository base-package:扫描的包 repository-impl-postfix:仓库自定义实现类型的后缀 
		自动扫描并添加到接口的实现 factory-class 仓库接口的实现工厂 -->
	<jpa:repositories base-package="com.ehking.wallet.**.repository"
		repository-impl-postfix="Impl"
		factory-class="com.ehking.commons.persistence.repository.support.SimpleBaseRepositoryFactoryBean"
		entity-manager-factory-ref="entityManagerFactory"
		transaction-manager-ref="transactionManager">
	</jpa:repositories>


	<!--事务管理器配置 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="doReweight" propagation="REQUIRES_NEW" />
			<tx:method name="doClear*" propagation="REQUIRES_NEW" />
			<tx:method name="doSend*" propagation="REQUIRES_NEW" />
			<tx:method name="doBatchSave*" propagation="REQUIRES_NEW" />

			<!--hibernate4必须配置为开启事务 否则 getCurrentSession()获取不到 -->
			<tx:method name="get*" propagation="REQUIRED" read-only="true" />
			<tx:method name="count*" propagation="REQUIRED" read-only="true" />
			<tx:method name="find*" propagation="REQUIRED" read-only="true" />
			<tx:method name="list*" propagation="REQUIRED" read-only="true" />
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>

	<aop:config expose-proxy="true" proxy-target-class="true">
		<!-- 只对业务逻辑层实施事务 -->
		<aop:pointcut id="txPointcut"
			expression="execution(* com.ehking.wallet..service..*.*(..))" />
		<aop:advisor id="txAdvisor" advice-ref="txAdvice"
			pointcut-ref="txPointcut" />
	</aop:config>


	<!--设置BaseRepositoryImplHelper辅助类所需的entityManagerFactory -->
	<bean
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod"
			value="com.ehking.commons.persistence.repository.RepositoryHelper.setEntityManagerFactory" />
		<property name="arguments" ref="entityManagerFactory" />
	</bean>

	<!-- 开启@AspectJ AOP代理 -->  
    <aop:aspectj-autoproxy proxy-target-class="true"/>  
      
    <!-- 任务调度器 -->  
    <task:scheduler id="scheduler" pool-size="10"/>  
      
    <!-- 任务执行器 -->  
    <task:executor id="executor" pool-size="10"/>  
      
    <!--开启注解调度支持 @Async @Scheduled-->  
    <task:annotation-driven executor="executor" scheduler="scheduler" proxy-target-class="true"/>
	
	<import resource="classpath:applicationContext-wallet-core-remote.xml"/>

</beans>